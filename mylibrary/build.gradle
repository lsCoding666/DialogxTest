plugins {
    id 'com.android.library'
}

android {
    namespace 'com.test.mylibrary'
    compileSdk 31

    defaultConfig {
        minSdk 24
        targetSdk 28

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures{
        viewBinding true
    }
}

dependencies {

    api 'androidx.appcompat:appcompat:1.2.0'
    api 'com.google.android.material:material:1.2.1'
    api 'androidx.constraintlayout:constraintlayout:2.0.1'

    
    /*retrofit、rxjava*/
    implementation 'com.squareup.retrofit2:retrofit:2.8.1'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'

    implementation 'com.squareup.retrofit2:converter-gson:2.8.1'
    implementation 'com.squareup.retrofit2:converter-scalars:2.8.1'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'

    // if u use AndroidX, use the following
    implementation 'com.blankj:utilcodex:1.30.5'


//    /*BRVAH*/
//    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.6'

    /*沉浸式状态栏*/
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0'
    implementation 'com.gyf.immersionbar:immersionbar-components:3.0.0'

    //数据库框架
    def lifecycle_version = "2.4.0"
    implementation "androidx.room:room-runtime:$lifecycle_version"
    annotationProcessor "androidx.room:room-compiler:$lifecycle_version"
    implementation "androidx.room:room-rxjava2:$lifecycle_version"
    // For Kotlin use kapt instead of annotationProcessor

    //腾讯x5
//    implementation 'com.tencent.tbs:tbssdk:44226'

    implementation 'com.nex3z:flow-layout:1.3.3'

    implementation 'com.github.donkingliang:LabelsView:1.6.5'
    //navigation
    def nav_version = "2.3.0"

    // Java language implementation
    implementation "androidx.navigation:navigation-fragment:$nav_version"
    implementation "androidx.navigation:navigation-ui:$nav_version"

    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.6'

    //阴影 https://github.com/lihangleo2/ShadowLayout
//    implementation 'com.github.lihangleo2:ShadowLayout:3.3.2'

//    //高德地图
//    //3d地图
//    implementation 'com.amap.api:3dmap:latest.integration'
////    //定位功能
////    implementation 'com.amap.api:location:latest.integration'
//    //搜索功能
//    implementation 'com.amap.api:search:latest.integration'

    //glide
    implementation 'com.github.bumptech.glide:glide:4.14.2'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.14.2'

//    Picture selector https://github.com/LuckSiege/PictureSelector
//     PictureSelector basic (Necessary)
    implementation 'io.github.lucksiege:pictureselector:v3.10.7'
    implementation 'io.github.lucksiege:compress:v3.10.7'

    //权限框架
    implementation 'com.permissionx.guolindev:permissionx:1.4.0'

    //ocr
//    compile(name: 'ifar-hatom-router-base-1.0.0-20220919.082659-17', ext: 'aar')
    api fileTree(dir: 'libs', include: ['*.jar'])
    compileOnly fileTree(dir: 'libs', include: ['*.aar'])
    //https://github.com/parkingwang/vehicle-keyboard-android
    api 'com.annimon:stream:1.1.9'
//    //https://github.com/kuangch/custom-keyboard
//    implementation 'com.dilusense.android:customkeyboard:1.1'
    //https://github.com/kongzue/DialogX
    def dialogx_version = "0.0.49.beta19"
    implementation "com.github.kongzue.DialogX:DialogX:${dialogx_version}"

    // implementation 'moe.sunjiao:osmunda:1.5.0'

//    api 'moe.sunjiao.osmosis:osmosis-pbf:0.48.2'
}